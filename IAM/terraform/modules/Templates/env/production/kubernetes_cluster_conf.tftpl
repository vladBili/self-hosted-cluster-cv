apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: ${ec2_instances["controlplane"]["controlplane-0"].private_ip}
  bindPort: 6443
nodeRegistration:
  name: ${ec2_instances["controlplane"]["controlplane-0"].private_dns}
  kubeletExtraArgs:
  - name: cgroup-driver
    value: systemd
  - name: pod-infra-container-image
    value: registry.k8s.io/pause:3.10
  - name: image-credential-provider-bin-dir
    value: /usr/local/bin
  - name: image-credential-provider-config
    value: /etc/kubernetes/credential-provider-config.yaml
  - name: node-ip
    value: ${ec2_instances["controlplane"]["controlplane-0"].private_ip}
  - name: cloud-provider 
    value: external

---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
clusterName: kubernetes
controlPlaneEndpoint: "k8s.${domain_name}:6443"
networking:
  serviceSubnet: 10.96.0.0/12 
  podSubnet: 10.0.0.0/16
apiServer:
  extraArgs:
    - name: bind-address
      value: 0.0.0.0 
  certSANs:
    - k8s.${domain_name}
    - localhost
    - 127.0.0.1
%{ for node in ec2_instances["haproxy"] ~}
    - ${node.private_ip}
%{ endfor ~}
%{ for node in ec2_instances["controlplane"] ~}
    - ${node.private_ip}
%{ endfor ~}
%{ for node in ec2_instances["controlplane"] ~}
    - ${node.private_dns}
%{ endfor ~}

controllerManager: 
  extraArgs: 
  - name: cloud-provider 
    value: external

scheduler: {}
dns: {}
